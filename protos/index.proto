syntax = "proto3";

package aerospike.vector;

option go_package = "aerospike.com/vector/protos/";
option java_package = "com.aerospike.vector.client.proto";
option java_multiple_files = true;

import "google/protobuf/empty.proto";
import "types.proto";

message StandaloneIndexMetrics {
  // The id of the index to insert into.
  IndexId indexId = 1;

  // Current state of the standalone index.
  StandaloneIndexState state = 2;

  // Inserted record count. For state CREATING, it reflects
  // localStoreInsertedCount, for state PERSISTING, it reflects
  // persistentStoreInsertedCount, for others, it would be 0.
  uint64 insertedRecordCount = 3;
}

message IndexStatusResponse {
  optional StandaloneIndexMetrics standaloneIndexMetrics = 1;

  // Number of unmerged index records.
  int64 unmergedRecordCount = 2;

  // Number of vector records indexed (0 in case healer has not yet run).
  int64 indexHealerVectorRecordsIndexed = 3;

  // Number of vertices in the main index (0 in case healer has not yet run).
  int64 indexHealerVerticesValid = 4;

  // Status of the index.
  Status status = 5;
}

message GcInvalidVerticesRequest {
  IndexId indexId = 1;

  // Vertices identified as invalid before cutoff timestamp (Unix timestamp) are garbage collected.
  int64 cutoffTimestamp = 2;
}

message IndexCreateRequest {
  IndexDefinition definition = 1;
}

message IndexUpdateRequest {
  IndexId  indexId = 1;

  // Optional labels associated with the index.
  map<string, string> labels = 2;

  oneof update {
    HnswIndexUpdate hnswIndexUpdate = 3;
  }

  // Mode of the index.
  optional IndexMode mode = 4;
}

message IndexDropRequest {
  IndexId indexId = 1;
}

message IndexListRequest {
  // Apply default values to parameters which are not set by user.
  optional bool applyDefaults = 1;
}

message IndexGetRequest {
  IndexId  indexId = 1;

  // Apply default values to parameters which are not set by user.
  optional bool applyDefaults = 2;
}

message IndexStatusRequest {
  IndexId indexId = 1;
}

// Service to manage indices.
service IndexService {
  // Create an index.
  rpc Create(IndexCreateRequest) returns (google.protobuf.Empty) {}

  // Create an index.
  rpc Update(IndexUpdateRequest) returns (google.protobuf.Empty) {}

  // Drop an index.
  rpc Drop(IndexDropRequest) returns (google.protobuf.Empty) {}

  // List available indices.
  rpc List(IndexListRequest) returns (IndexDefinitionList) {}

  // Get the index definition.
  rpc Get(IndexGetRequest) returns (IndexDefinition) {}

  // Query status of an index.
  // NOTE: API is subject to change.
  rpc GetStatus(IndexStatusRequest) returns (IndexStatusResponse) {}

  // Garbage collect vertices identified as invalid before cutoff timestamp.
  rpc GcInvalidVertices(GcInvalidVerticesRequest) returns (google.protobuf.Empty) {}
}
